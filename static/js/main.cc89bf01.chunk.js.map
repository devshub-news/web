{"version":3,"sources":["env.js","common/APIUtils.js","common/notificationsAPI.js","common/notificationsManager.js","news-banner/NewsBanner.jsx","common/categories.js","news/NewItem.jsx","news/NewsAPI.js","news/NewsList.jsx","news/News.jsx","topic/Topic.jsx","main/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["API_URL","APIUtils","url","query","response","undefined","options","method","referrerPolicy","mode","headers","fetch","createQuery","body","JSON","stringify","json","Object","entries","filter","item","map","join","NotificationsAPI","subscription","console","log","POST","endpoint","replace","GET","module","navigator","serviceWorker","register","NotificationsManager","Promise","resolve","a","ready","serviceWorkerRegistration","pushManager","getSubscription","window","ServiceWorkerRegistration","prototype","message","status","warn","browserSupport","checkBrowserSupport","Notification","requestPermission","permission","categories","urlBase64ToUint8Array","base64String","base64","repeat","length","rawData","atob","outputArray","Uint8Array","i","charCodeAt","askNotificationPermission","permisson","subscribe","userVisibleOnly","applicationServerKey","toJSON","sendSubscription","deleteSubscription","unsubscribe","Element","BannerAnim","BgElement","NewsBanner","props","news","style","width","height","type","autoPlay","newItem","prefixCls","className","backgroundImage","image","backgroundSize","backgroundPosition","href","name","padding","color","from","timeago","date","title","marginTop","display","flexWrap","chips","getChips","classification","classificationCategoriesSize","keys","Chip","label","principal","bayes_classification","toFixed","category","percent","NewItem","target","rel","Card","CardActionArea","CardMedia","CardContent","Typography","variant","component","marginBottom","gutterBottom","NewsAPI","quantity","ok","NewsList","useState","latestTopicNews","setLatestTopicNews","useEffect","isMounted","getNews","topic","then","data","forEach","justifyContent","Button","margin","id","News","latestNews","setLatestNews","categoryName","Topic","innerHTML","match","params","slice","toUpperCase","Main","React","anchorEl","setAnchorEl","setCategories","sub","getSubscriptionCategories","newCategories","fromEntries","e","checked","prev","AppBar","position","Toolbar","src","alt","srcSet","IconButton","aria-haspopup","onClick","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","categoriesNames","MenuItem","marginRight","Switch","size","onChange","toggleChecked","backgroundColor","paddingBottom","path","exact","to","App","theme","createMuiTheme","palette","primary","main","secondary","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","thirdParty","document","getElementById"],"mappings":"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","file":"static/js/main.cc89bf01.chunk.js","sourcesContent":["export const API_URL = \"https://devshub-main.herokuapp.com\"","export default class APIUtils {\n\n    static async GET(url, query) {\n        let response = undefined\n        \n        let options = {\n            method: 'GET',\n            referrerPolicy: 'no-referrer',\n            mode: 'cors',\n            headers: {}\n        }\n\n        try {\n            response = await fetch(query ? `${url}?${APIUtils.createQuery(query)}` : url, options)\n        } catch (error) {\n            return error\n        }\n        return response\n    }\n\n    static async POST(url, body) {\n        let options = {\n            method: 'POST',\n            mode: 'cors',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        }\n        let response = undefined;\n        try {\n            response = await fetch(url, options)\n        } catch (error) {\n            return error\n        }\n        return response\n    }\n\n    static async PATCH(url, body) {\n        let options = {\n            method: 'PATCH',\n            mode: 'cors',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        }\n\n        let response = undefined;\n        try {\n            response = await fetch(url, options)\n        } catch (error) {\n            return error\n        }\n        return response\n    }\n\n    static async DELETE(url, query) {\n        let response = undefined\n        \n        let options = {\n            method: 'DELETE',\n            referrerPolicy: 'no-referrer',\n            mode: 'cors',\n            headers: {}\n        }\n\n        try {\n            response = await fetch(query ? `${url}?${APIUtils.createQuery(query)}` : url, options)\n        } catch (error) {\n            return error\n        }\n        return response\n    }\n\n    static createQuery(json) {\n        const query = Object.entries(json).filter((item) => item[1] !== undefined && item[1] !== \"\" && item[1] !== null).map(item => item.join(\"=\")).join(\"&\")\n        return query\n    }\n}","import { API_URL } from \"../env\"\nimport APIUtils from \"./APIUtils\"\n\n\nclass NotificationsAPI {\n\n    static module = \"notifications\"\n\n    static sendSubscription(subscription) {\n        console.log(subscription)\n        APIUtils.POST(`${API_URL}/subscription/`, subscription)\n    }\n\n    static deleteSubscription(subscription) {\n        console.log(subscription)\n    }\n\n    static getSubscription(endpoint) {\n        endpoint = endpoint.replace('https://fcm.googleapis.com/fcm/send/', '')\n\n        return APIUtils.GET(`${API_URL}/subscription/${endpoint}`)\n    }\n}\n\nexport default NotificationsAPI","import NotificationsAPI from \"./notificationsAPI\";\n\nif(navigator.serviceWorker)\n    navigator.serviceWorker.register('./service-worker.js')\n\nclass NotificationsManager {\n\n    static get subscription() {\n        return new Promise(async (resolve) => {\n            try {\n                if (navigator.serviceWorker && navigator.serviceWorker.ready) {\n                    let serviceWorkerRegistration = await navigator.serviceWorker.ready\n\n                    let subscription = await serviceWorkerRegistration.pushManager.getSubscription()\n                    if (subscription) {\n                        let response = await NotificationsAPI.getSubscription(subscription.endpoint)\n                        resolve(await response.json())\n                    }\n                    else {\n                        resolve(undefined)\n                    }\n                }\n                else {\n                    console.log(\"a.no\")\n                    resolve(undefined)\n                }\n            }\n            catch (error) {\n                resolve(undefined)\n            }\n        })\n    }\n\n\n    static checkBrowserSupport() {\n        if (!('Notification' in window)) {\n            console.log(\"This browser does not support notifications.\");\n            return {\n                message: \"El navegador no soporta notificaciones\",\n                status: 0\n            }\n        }\n\n        else if (!('serviceWorker' in navigator)) {\n            console.log(\"This browser does not support serviceWorkers.\");\n            return {\n                message: \"El navegador no soporta serviceWorkers para las notificaciones\",\n                status: 0\n            }\n        }\n\n        else if (!('showNotification' in ServiceWorkerRegistration.prototype)) {\n            console.warn('Notifications aren\\'t supported. on serviceWorkers');\n            return {\n                message: \"El navegador no soporta serviceWorkers para las notificaciones\",\n                status: 0\n            }\n        }\n\n        else if (!('PushManager' in window)) {\n            console.warn('Push messaging isn\\'t supported.');\n            return {\n                message: \"El navegador no soporta notificaciones (WebPushNotifications)\",\n                status: 0\n            }\n        }\n\n        return {\n            message: \"El navegador soporta las notificaciones\",\n            status: 1\n        }\n    }\n\n    static async askNotificationPermission() {\n        const browserSupport = NotificationsManager.checkBrowserSupport()\n        if (browserSupport.status === 0) {\n            return browserSupport\n        }\n\n        await Notification.requestPermission()\n\n        if (Notification.permission === 'denied' || Notification.permission === 'default') {\n            return {\n                message: \"No se ha brindado el permiso para enviar notificaciones\",\n                status: 0\n            }\n        }\n        return {\n            message: \"Permiso para las notificaciones concedido\",\n            status: 1\n        }\n\n    }\n\n    static async subscribe(categories) {\n\n        const permisson = await NotificationsManager.askNotificationPermission()\n        if (permisson.status === 0) {\n            return permisson\n        }\n\n        const serviceWorkerRegistration = await navigator.serviceWorker.ready\n\n        function urlBase64ToUint8Array(base64String) {\n            var padding = '='.repeat((4 - base64String.length % 4) % 4);\n            var base64 = (base64String + padding)\n                .replace(/-/g, '+')\n                .replace(/_/g, '/');\n\n            var rawData = window.atob(base64);\n            var outputArray = new Uint8Array(rawData.length);\n\n            for (var i = 0; i < rawData.length; ++i) {\n                outputArray[i] = rawData.charCodeAt(i);\n            }\n            return outputArray;\n        }\n\n        await serviceWorkerRegistration.pushManager.subscribe({\n            userVisibleOnly: true,\n            applicationServerKey: urlBase64ToUint8Array(\n                'BM8NdnO8utf-55OjNDmQjJP5GifJVYGS2AdlJ3mmUUjidgICJR2iSWPQLrcksxHfrppV9FJ38f6qAz8Acu6LApo'\n            )\n        })\n\n        let subscription = await serviceWorkerRegistration.pushManager.getSubscription()\n\n        subscription = subscription.toJSON()\n        subscription.categories = categories\n\n        NotificationsAPI.sendSubscription(subscription)\n\n        return {\n            message: \"Suscrito a notificaciones\",\n            status: 1\n        }\n    }\n\n    static async unsubscribe() {\n        if (await NotificationsManager.subscription === undefined) {\n            return\n        }\n        const serviceWorkerRegistration = await navigator.serviceWorker.ready\n\n        const subscription = await serviceWorkerRegistration.pushManager.getSubscription()\n\n        NotificationsAPI.deleteSubscription(subscription.toJSON())\n\n        subscription.unsubscribe()\n    }\n}\n\nexport default NotificationsManager\n","import BannerAnim from 'rc-banner-anim';\nimport QueueAnim from 'rc-queue-anim';\nimport * as timeago from 'timeago.js';\n\nimport './NewsBanner.css'\n\nconst { Element } = BannerAnim;\nconst BgElement = Element.BgElement;\n\nconst NewsBanner = (props) => {\n\n    const news = props.news\n\n    return <div style={{ width: 'inherit', height: 'inherit' }}>\n        <BannerAnim type=\"across\" autoPlay>\n            {news.map(newItem => (\n                <Element key={newItem.url}\n                    prefixCls=\"banner-user-elem\"\n                >\n\n                    <BgElement\n                        key=\"bg\"\n                        className=\"bg\"\n                        style={{\n                            backgroundImage: `url(${newItem.image || \"https://i.stack.imgur.com/y9DpT.jpg\"})`,\n                            backgroundSize: 'cover',\n                            backgroundPosition: 'center',\n                        }}\n                    />\n                    <a href={newItem.url}>\n                        <QueueAnim name=\"QueueAnim\" style={{ padding: '20px', color: 'white' }}>\n                            <p key=\"p\">{newItem.from} - {timeago.format(newItem.date)}</p>\n                            <h1 key=\"h1\">{newItem.title}</h1>\n                            <div key=\"div\" style={{ marginTop: \"10px\", display: \"flex\", flexWrap: \"wrap\" }} >\n                                {newItem.chips}\n                            </div>\n                        </QueueAnim>\n                    </a>\n                </Element>\n            ))}\n        </BannerAnim>\n    </div>\n}\n\nexport default NewsBanner","import { Chip } from \"@material-ui/core\";\n\nexport const categories = {\n    \"web\": \"Web Development\",\n    \"py\": \"AI and Python\",\n    \"apis\": \"APIs and Databases\",\n    \"devops\": \"DevOps\",\n    \"career\": \"Career and CV\",\n    \"os\": \"OS and Hardware\",\n    \"other\": \"Others\",\n};\n\nexport function getChips(classification) {\n    let chips = []\n    const classificationCategoriesSize = classification.categories !== undefined ? Object.keys(classification.categories).length : 0\n\n    if (classificationCategoriesSize > 0) {\n        if (classificationCategoriesSize > 1) {\n            chips = [<Chip label={`${categories[classification.principal]} | ${classification.bayes_classification[classification.principal].toFixed(2)}`} color=\"primary\" key={classification.principal} />]\n            chips = [...chips, ...Object.entries(classification.bayes_classification).map(([category, percent]) => category !== classification.principal ? (\n                <Chip label={`${categories[category]} | ${percent.toFixed(2)}`} color=\"default\" key={category} />\n            ) : '')]\n        }\n        else {\n            chips = [<Chip label={categories[classification.principal]} color=\"primary\" key={classification.principal} />]\n        }\n\n    }\n    else {\n        chips = [<Chip label=\"Other\" color=\"primary\" key=\"other\" />]\n    }\n    return chips\n}","import { Card, CardActionArea, CardContent, CardMedia, Typography } from \"@material-ui/core\"\nimport * as timeago from 'timeago.js';\n\nconst NewItem = (props) => {\n\n    return <a href={props.newItem.url} target=\"_blank\" rel=\"noreferrer\">\n\n        <Card className=\"news-item\">\n            <CardActionArea>\n                <CardMedia style={{ height: \"145px\", filter: \"brightness(0.7)\" }}\n                    image={props.newItem.image || \"https://i.stack.imgur.com/y9DpT.jpg\"}\n                    title=\"Post image\"\n                />\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ marginBottom: \"10px\" }}>\n                        {props.newItem.from} - {timeago.format(props.newItem.date)}\n                    </Typography>\n                    <Typography gutterBottom variant=\"h6\" component=\"h2\">\n                        {props.newItem.title}\n                    </Typography>\n\n                    <div style={{ marginTop: \"10px\", display: \"flex\", flexWrap: \"wrap\" }}>\n                        {props.newItem.chips}\n                    </div>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    </a>\n}\n\nexport default NewItem","import APIUtils from \"../common/APIUtils\"\nimport { API_URL } from \"../env\"\n\n\nexport default class NewsAPI {\n\n    static module = \"news\"\n\n\n    static async getNews(category = undefined, quantity = undefined){\n        let query = {}\n        if(category) query.category = category\n        if(quantity) query.quantity = quantity\n\n        try{\n            const response = await APIUtils.GET(`${API_URL}/${NewsAPI.module}/`, query)\n            if(response.ok){\n                return response.json()\n            }\n            return undefined\n        }\n        catch (e) {\n            console.log(e)\n            return undefined\n        }\n    }\n}","import { Button } from \"@material-ui/core\"\nimport { useEffect, useState } from \"react\"\nimport { getChips } from \"../common/categories\"\nimport NewItem from \"./NewItem\"\nimport NewsAPI from \"./NewsAPI\"\n\n\nconst NewsList = (props) => {\n\n    const [latestTopicNews, setLatestTopicNews] = useState([])\n\n    useEffect(() => {\n        let isMounted = true;\n        NewsAPI.getNews(props.topic, 8).then(response => {\n          if (isMounted) {\n            if(response !== undefined){\n                response.data.forEach(newItem => {\n                    newItem.chips = getChips(newItem.classification)\n                })\n                setLatestTopicNews(response.data)\n            }\n          }\n        })\n        return () => { isMounted = false };\n      }, [props.topic]);  \n\n    return (\n        <div style={{marginBottom: \"40px\"}}>\n            <a style={{ display: \"flex\", justifyContent: \"space-between\" }} href={`#/topic/${props.topic}`}>\n                <h1 className=\"news-title\">{props.title}</h1>\n                <Button variant=\"contained\" color=\"primary\" style={{ margin: \"auto 20px\" }}>\n                    See more\n                </Button>\n            </a>\n\n            <div className=\"news-items-container\">\n\n                {latestTopicNews.length > 0 && latestTopicNews.map(newItem => (\n                    <NewItem newItem={newItem} key={newItem.id}></NewItem>\n                ))}\n            </div>\n        </div>\n    )\n}\n\n\nexport default NewsList","import './News.css'\n\nimport NewsBanner from '../news-banner/NewsBanner';\nimport NewsList from './NewsList';\nimport { useEffect, useState } from 'react';\nimport NewsAPI from './NewsAPI';\nimport { categories, getChips } from \"../common/categories\";\n\nconst News = () => {\n\n    const [latestNews, setLatestNews] = useState([])\n\n    useEffect(() => {\n        let isMounted = true;\n        NewsAPI.getNews(undefined, 6).then(response => {\n          if (isMounted) {\n            if(response !== undefined){\n                response.data.forEach(newItem => {\n                    newItem.chips = getChips(newItem.classification)\n                })\n                setLatestNews(response.data)\n            }\n          }\n        })\n        return () => { isMounted = false };\n      }, []);\n\n    return <div className=\"news-container\">\n        <div className=\"news-banner-container\">\n            <NewsBanner news={latestNews}></NewsBanner>\n        </div>\n        <div className=\"news-content\">\n            {Object.entries(categories).map(([category, categoryName]) => (\n                <NewsList title={categoryName} topic={category} key={category}></NewsList>\n            ))}\n        </div>\n    </div>\n}\n\nexport default News","import { useEffect, useState } from \"react\"\nimport { categories, getChips } from \"../common/categories\"\nimport NewsBanner from \"../news-banner/NewsBanner\"\nimport NewItem from \"../news/NewItem\"\nimport NewsAPI from \"../news/NewsAPI\"\n\nimport './Topic.css'\n\n\nconst Topic = (props) => {\n\n    window.title.innerHTML = categories[props.match.params.category] + \" - Devshub\"\n\n    const [latestNews, setLatestNews] = useState([])\n\n    useEffect(() => {\n        let isMounted = true;\n        NewsAPI.getNews(props.match.params.category).then(response => {\n          if (isMounted) {\n            if(response !== undefined){\n                response.data.forEach(newItem => {\n                    newItem.chips = getChips(newItem.classification)\n                })\n                setLatestNews(response.data)\n            }\n          } \n        })\n        return () => { isMounted = false };\n      }, [props.match]);\n\n\n    return <div className=\"news-container\">\n        <div className=\"news-banner-container\">\n            <NewsBanner news={latestNews.slice(0, 7)}></NewsBanner>\n        </div>\n        <h1 className=\"topic-title\">{categories[props.match.params.category].toUpperCase()}</h1>\n        <div className=\"topic-news-container\">\n            {latestNews.map(newItem => (\n                <NewItem newItem={newItem} key={newItem.id}></NewItem>\n            ))}\n        </div>\n    </div>\n}\n\nexport default Topic","import { AppBar, IconButton, Menu, MenuItem, Switch, Toolbar, Typography } from \"@material-ui/core\"\nimport React, { useEffect } from \"react\";\nimport NotificationsIcon from '@material-ui/icons/Notifications';\n\nimport './Main.css'\nimport { Redirect, Route, HashRouter as Router, Switch as RouterSwitch } from 'react-router-dom';\nimport NotificationsAPI from \"../common/notificationsAPI\";\nimport NotificationsManager from \"../common/notificationsManager\";\nimport News from \"../news/News\";\nimport Topic from \"../topic/Topic\";\nimport {categories as categoriesNames} from \"../common/categories\";\n\nconst Main = () => {\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const [categories, setCategories] = React.useState({});\n\n    useEffect(() => {\n        const getSubscriptionCategories = async () => {\n            let sub = await NotificationsManager.subscription\n            if (sub) {\n                setCategories(sub.categories || {})\n            }\n        }\n        getSubscriptionCategories();\n    }, [])\n\n    // useEffect(() => {\n    //     sendSubscription()\n    // }, [categories])\n\n\n    const handleMenuClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorEl(null);\n    };\n\n    const sendSubscription = async () => {\n        const newCategories = Object.fromEntries(Object.entries(categories).filter(([, checked]) => checked))\n        console.log(newCategories)\n        const subscription = await NotificationsManager.subscription\n        if (subscription) {\n            subscription.categories = newCategories\n            await NotificationsAPI.sendSubscription(subscription)\n        }\n        else {\n            await NotificationsManager.subscribe(newCategories)\n        }\n\n    }\n\n    async function toggleChecked(e, category) {\n        console.log(e.target.checked)\n        if (e.target.checked) {\n            setCategories(prev => {\n                prev[category] = true\n                sendSubscription()\n                return { ...prev }\n            })\n        }\n        else {\n            setCategories(prev => {\n                prev[category] = false\n                sendSubscription()\n                return { ...prev }\n            })\n        }\n\n    }\n\n\n    return <div className=\"main-container\">\n        <AppBar position=\"static\" className=\"appbar\">\n            <Toolbar style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <a href=\"#/\" style={{ display: \"flex\" }}>\n                    <img src=\"assets/images/devshub-white.png\" alt=\"\" className=\"toolbar-icon\" srcSet=\"assets/images/devshub-white.svg\" />\n                    <Typography variant=\"h6\" className=\"main-title\" >\n                        DevsHub\n                    </Typography>\n                </a>\n                <div style={{ display: \"flex\" }}>\n                    <div>\n                        <IconButton aria-haspopup=\"true\" onClick={handleMenuClick} color=\"secondary\">\n                            <NotificationsIcon />\n                        </IconButton>\n                        <Menu\n                            id=\"simple-menu\"\n                            anchorEl={anchorEl}\n                            keepMounted\n                            open={Boolean(anchorEl)}\n                            onClose={handleMenuClose}\n                        >\n                            {Object.entries(categoriesNames).map(([category, categoryName]) => (\n                                <MenuItem className=\"main-notications-menu-item\" key={category}>\n                                    <span style={{ marginRight: \"10px\" }}>\n                                        {categoryName}\n                                    </span>\n                                    <Switch size=\"small\" color=\"primary\" checked={categories[category] || false} onChange={(e) => toggleChecked(e, category)} />\n                                </MenuItem>\n                            ))}\n                        </Menu>\n                    </div>\n                </div>\n            </Toolbar>\n        </AppBar>\n        <div style={{ display: \"flex\", height: \"min-content\", backgroundColor: \"inherit\", paddingBottom: '50px' }}>\n                <Router>\n                    <RouterSwitch>\n                        <Route path=\"/\" exact={true}>\n                            <News></News>\n                        </Route>\n                        <Route path=\"/topic/:category\" exact={true} component={Topic}>\n                        </Route>\n                        <Route path=\"/hub/:id\" exact={true}>\n                            Una específica\n                        </Route>\n                        <Redirect path=\"\" to=\"/\" />\n                    </RouterSwitch>\n                </Router>\n        </div>\n    </div>\n}\n\nexport default Main","import './App.css';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\nimport Main from './main/Main';\n\nfunction App() {\n\n  const theme = createMuiTheme({\n    palette: {\n      type: 'dark',\n      primary: {\n        main: '#2196f3'\n      },\n      secondary: {\n        main: '#FFFFFF'\n      }\n    }\n  });\n\n  return (\n    <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n          <Main></Main>\n        </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode thirdParty={false}>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}